-webkit-transition: all 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);
transition: all 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);

Helpdesk
Warehouses

consigner 委托人
consignee/assignee 受托人

A network error (such as timeout, interrupted connection or unreachable host) has occurred.

CREATE TABLE TEST(
    NAME VARCHAR(10) BINARY
);
SELECT * FROM TABLE TEST WHERE BINARY NAME='Clip';

# 0：区分大小写，1：不区分大小写
lower_case_table_names = 0

SET GLOBAL max_allowed_packet = 2*1024*1024*10

ALTER TABLE TEST CONVERT TO CHARACTER SET "utf8mb4" COLLATE "utf8mb4_bin";

------------------------------------------------------------------------------------------------------------------------
# CALL UPPERCASE('库名')
DROP PROCEDURE IF EXISTS uppercase;
CREATE PROCEDURE uppercase(IN dbname VARCHAR(200))
BEGIN

DECLARE done INT DEFAULT 0;
DECLARE oldname VARCHAR(200);
DECLARE cur CURSOR FOR SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = dbname;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;

OPEN cur;

REPEAT

FETCH cur INTO oldname;

SET @newname = UPPER(oldname);
SET @isNotSame = @newname <> BINARY oldname;
IF NOT done && @isNotSame THEN
SET @SQL = CONCAT('RENAME TABLE `',oldname,'` TO `', LOWER(@newname), '_tmp` ');
PREPARE tmpstmt FROM @SQL;
EXECUTE tmpstmt;

SET @SQL = CONCAT('RENAME TABLE `',LOWER(@newname),'_tmp` TO `',@newname, '`');
PREPARE tmpstmt FROM @SQL;
EXECUTE tmpstmt;

DEALLOCATE PREPARE tmpstmt;

END IF;
UNTIL done END REPEAT;
CLOSE cur;
END
------------------------------------------------------------------------------------------------------------------------

RENAME TABLE test TO test_, test_ TO TEST;

ALTER TABLE test RENAME TO TEST;



SHOW VARIABLES LIKE 'slow_query%';
SHOW VARIABLES LIKE 'long_query_time';

SET GLOBAL slow_query_log='ON';
-- FILE
SET GLOBAL log_output='TABLE';
SET GLOBAL slow_query_log_file='/usr/local/mysql/data/slow.log';
SET GLOBAL long_query_time=1;
SET GLOBAL log-queries-not-using-indexes=ON
SET GLOBAL log-slow-admin-statements=ON

[mysqld]
# 指定是否开启慢查询日志 ON|OFF (1|0)缺省关闭
slow_query_log = ON
# 旧版（5.6以下版本）MySQL数据库慢查询日志存储路径。可以不设置该参数，系统则会默认给一个缺省的文件host_name-slow.log
log-slow-queries = host_name-slow.log
# 指定慢日志文件存放位置，可以为空，系统会给一个缺省的文件host_name-slow.log
slow_query_log_file = /usr/local/mysql/data/host_name-slow.log
# 慢查询阀值，当查询时间超出设定值的SQL即被记录到慢查询日志，单位为妙，缺省值为10s
long_query_time = 3
# 查询检查返回少于该参数指定行的SQL不被记录到慢查询日志
min_examined_row_limit
# 未使用索引的查询也被记录到慢查询日志中（可选项）
log-queries-not-using-indexes
# 开启记录管理型慢SQL。缺省情况下数据库相关管理型SQL(比如OPTIMIZE TABLE、ANALYZE TABLE和ALTER TABLE)不会被记录到日志。
log-slow-admin-statements
# 每分钟允许记录到slow log的且未使用索引的SQL语句次数。该值默认为0，表示没有限制，在生产环境下，若没有使用索引，此类SQL语句会频繁地被记录到slow log，从而导致slow log文件的大小不断增加，故DBA可通过此参数进行配置。该参数MySQL 5.6.5版本开始新增
log_throttle_queries_not_using_indexes
# 日志存储方式 FILE TABLE log_output='FILE,TABLE'
log_output='TABLE'

